<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.winebouti.mapper.ReviewMapper">

	<resultMap id="reviewResultMap"
		type="com.winebouti.vo.ReviewVO">
		<id property="reviewId" column="review_id" />
		<result property="productId" column="product_id" />
		<result property="memberId" column="member_id" />
		<!-- <result property="purchaseId" column="purchase_id" /> -->
		<result property="content" column="content" />
		<result property="star" column="star" />
		<result property="isOpen" column="is_open" />
		<!-- <result property="password" column="password" /> -->
		<result property="response" column="response" />
		<result property="imagePath" column="image_path" />
		<result property="writeDate" column="write_date" />
		<result property="updateDate" column="update_date" />
	</resultMap>



	<select id="selectAllReviews"
		resultMap="reviewResultMap">
		SELECT * FROM review; <!-- 리뷰 테이블 -->
	</select>

	<!-- 리뷰 ID로 리뷰 조회 -->
	<select id="getReviewsByProductId"
		resultMap="reviewResultMap">
		SELECT * FROM review
		WHERE product_id = #{productId}
		ORDER BY write_date
		DESC  <!-- 올바른 컬럼명으로 변경 -->
	</select>


	<!-- 리뷰 추가 -->
	<insert id="insertReview"
		parameterType="com.winebouti.vo.ReviewVO">
		INSERT INTO Review (product_id, member_id, title, content,
		star, image_path,
		write_date)
		VALUES (#{productId}, #{memberId}, #{title},
		#{content}, #{star}, #{imagePath},
		#{writeDate});
	</insert>

	<!-- 리뷰 수정 -->
	<update id="updateReview"
		parameterType="com.winebouti.vo.ReviewVO">
		UPDATE Review
		SET content = #{content},
		star = #{star},
		is_open = #{isOpen},
		<!-- password = #{password}, -->
		response = #{response}
		WHERE review_id = #{reviewId}
	</update>

	<!-- 리뷰 정보 가져오기 (삭제 전 이미지 경로 확인) -->
	<select id="getReviewById" resultMap="reviewResultMap">
		SELECT * FROM review WHERE review_id = #{reviewId}
	</select>

	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="long">
		DELETE FROM Review WHERE
		review_id = #{reviewId}
	</delete>


	<!-- 이미지 -->
	<select id="getAllReviews"
		resultMap="reviewResultMap">
		SELECT
		review_id AS reviewId,
		product_id AS productId,
		member_id AS
		memberId,
		title,
		content,
		star,
		write_date AS writeDate,
		response,
		image_path AS imagePath  <!-- ⭐ 추가된 부분 -->
		FROM Review
	</select>


	   <!-- 관리자 답글 업데이트 -->
    <update id="updateResponse" parameterType="ReviewVO">
        UPDATE review 
        SET response = #{response}
        WHERE review_id = #{reviewId}
    </update>
	
	
</mapper>
